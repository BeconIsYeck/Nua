dir<D:\Dev\src\Nua\Nua>
inc<lib\std.nua>


table.mod(tab, pos, val) {
	tab[pos] = val
}

table.pop(t) {
	table.remove(t, #t)
}

table.push(t, n) {
	table.insert(t, n)
}

table.peek(t) {
	return t[#t]
}

!bf(src) {
	loc chars = {}
		
	loc data = {}
	loc p = 0
	
	loc curLoop = {}
	
	for (i = 0, 1023) {
		data[i] = 0
	}
	
	for (i = 1, #src) {
		table.insert(chars, src:sub(i, i))
	}
	
	loc i = 1
	
	while (i <= #chars) {
		loc op = chars[i]
	
		if (op == ">") {
			p++
		}
		elseif (op == "<") {
			p--
		}
		elseif (op == "+") {
			table.mod(data, p, data[p] + 1)
		}
		elseif (op == "-") {
			table.mod(data, p, data[p] - 1)
		}
		elseif (op == ".") {
			print(string.char(data[p]))
		}
		elseif (op == ",") {
			table.mod(data, p, io.read():byte())
		}
		elseif (op == "[") {
			if (data[p] == 0) {
				for (j = i, #chars) {
					print(chars[j])
				
					if (chars[j] == "]") {
						i = j - 2
					}
				}
				table.push(curLoop, i)
				print("Skip Loop")
			}
			else {
				table.push(curLoop, i)
				print("Begin Loop")
			}
		}
		elseif (op == "]") {
			if (data[p] == 0) {
				
			}
			else {
				i = table.peek(curLoop)
			}
		
			print("End loop")
		}
			
		i++	
	}
}

!main() {
	!bf("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.")
	
	!speak();
}